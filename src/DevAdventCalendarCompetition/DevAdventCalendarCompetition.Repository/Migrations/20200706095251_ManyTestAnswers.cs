// This file isn't generated, but this comment is necessary to exclude it from StyleCop analysis. // <auto-generated/>
using System;
using Microsoft.EntityFrameworkCore.Migrations;

namespace DevAdventCalendarCompetition.Repository.Migrations
{
    public partial class ManyTestAnswers : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_TestAnswer_Test_TestId",
                table: "TestAnswer");

            migrationBuilder.DropForeignKey(
                name: "FK_TestAnswer_AspNetUsers_UserId",
                table: "TestAnswer");

            migrationBuilder.DropTable(
                name: "WrongAnswer");

            migrationBuilder.DropPrimaryKey(
                name: "PK_TestAnswer",
                table: "TestAnswer");

            migrationBuilder.DropIndex(
                name: "IX_TestAnswer_TestId",
                table: "TestAnswer");

            migrationBuilder.DropIndex(
                name: "IX_TestAnswer_UserId",
                table: "TestAnswer");

            migrationBuilder.DropPrimaryKey(
                name: "PK_Test",
                table: "Test");

            migrationBuilder.DeleteData(
                table: "AspNetUserRoles",
                keyColumns: new[] { "UserId", "RoleId" },
                keyValues: new object[] { "c611530e-bebd-41a9-ace2-951550edbfa0", "1" });

            migrationBuilder.DeleteData(
                table: "AspNetUsers",
                keyColumn: "Id",
                keyValue: "c611530e-bebd-41a9-ace2-951550edbfa0");

            migrationBuilder.DropColumn(
                name: "FirstName",
                table: "AspNetUsers");

            migrationBuilder.DropColumn(
                name: "SecondName",
                table: "AspNetUsers");

            migrationBuilder.DropColumn(
                name: "AnsweringTime",
                table: "TestAnswer");

            migrationBuilder.DropColumn(
                name: "AnsweringTimeOffset",
                table: "TestAnswer");

            migrationBuilder.DropColumn(
                name: "UserId",
                table: "TestAnswer");

            migrationBuilder.DropColumn(
                name: "HashedAnswer",
                table: "Test");

            migrationBuilder.DropColumn(
                name: "PlainAnswer",
                table: "Test");

            migrationBuilder.RenameTable(
                name: "TestAnswer",
                newName: "TestAnswers");

            migrationBuilder.RenameTable(
                name: "Test",
                newName: "Tests");

            migrationBuilder.AddColumn<string>(
                name: "Answer",
                table: "TestAnswers",
                nullable: true);

            migrationBuilder.AddPrimaryKey(
                name: "PK_TestAnswers",
                table: "TestAnswers",
                columns: new[] { "TestId", "Id" });

            migrationBuilder.AddPrimaryKey(
                name: "PK_Tests",
                table: "Tests",
                column: "Id");

            migrationBuilder.CreateTable(
                name: "UserTestCorrectAnswers",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    TestId = table.Column<int>(nullable: false),
                    UserId = table.Column<string>(nullable: false),
                    AnsweringTime = table.Column<DateTime>(nullable: false),
                    AnsweringTimeOffset = table.Column<TimeSpan>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_UserTestCorrectAnswers", x => x.Id);
                    table.ForeignKey(
                        name: "FK_UserTestCorrectAnswers_Tests_TestId",
                        column: x => x.TestId,
                        principalTable: "Tests",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_UserTestCorrectAnswers_AspNetUsers_UserId",
                        column: x => x.UserId,
                        principalTable: "AspNetUsers",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "UserTestWrongAnswers",
                columns: table => new
                {
                    Id = table.Column<int>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    TestId = table.Column<int>(nullable: false),
                    UserId = table.Column<string>(nullable: false),
                    Time = table.Column<DateTime>(nullable: false),
                    Answer = table.Column<string>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_UserTestWrongAnswers", x => x.Id);
                    table.ForeignKey(
                        name: "FK_UserTestWrongAnswers_Tests_TestId",
                        column: x => x.TestId,
                        principalTable: "Tests",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_UserTestWrongAnswers_AspNetUsers_UserId",
                        column: x => x.UserId,
                        principalTable: "AspNetUsers",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateIndex(
                name: "IX_UserTestCorrectAnswers_TestId",
                table: "UserTestCorrectAnswers",
                column: "TestId");

            migrationBuilder.CreateIndex(
                name: "IX_UserTestCorrectAnswers_UserId",
                table: "UserTestCorrectAnswers",
                column: "UserId");

            migrationBuilder.CreateIndex(
                name: "IX_UserTestWrongAnswers_TestId",
                table: "UserTestWrongAnswers",
                column: "TestId");

            migrationBuilder.CreateIndex(
                name: "IX_UserTestWrongAnswers_UserId",
                table: "UserTestWrongAnswers",
                column: "UserId");

            migrationBuilder.AddForeignKey(
                name: "FK_TestAnswers_Tests_TestId",
                table: "TestAnswers",
                column: "TestId",
                principalTable: "Tests",
                principalColumn: "Id",
                onDelete: ReferentialAction.Cascade);
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_TestAnswers_Tests_TestId",
                table: "TestAnswers");

            migrationBuilder.DropTable(
                name: "UserTestCorrectAnswers");

            migrationBuilder.DropTable(
                name: "UserTestWrongAnswers");

            migrationBuilder.DropPrimaryKey(
                name: "PK_Tests",
                table: "Tests");

            migrationBuilder.DropPrimaryKey(
                name: "PK_TestAnswers",
                table: "TestAnswers");

            migrationBuilder.DropColumn(
                name: "Answer",
                table: "TestAnswers");

            migrationBuilder.RenameTable(
                name: "Tests",
                newName: "Test");

            migrationBuilder.RenameTable(
                name: "TestAnswers",
                newName: "TestAnswer");

            migrationBuilder.AddColumn<string>(
                name: "FirstName",
                table: "AspNetUsers",
                type: "nvarchar(max)",
                nullable: true);

            migrationBuilder.AddColumn<string>(
                name: "SecondName",
                table: "AspNetUsers",
                type: "nvarchar(max)",
                nullable: true);

            migrationBuilder.AddColumn<string>(
                name: "HashedAnswer",
                table: "Test",
                type: "nvarchar(max)",
                nullable: true);

            migrationBuilder.AddColumn<string>(
                name: "PlainAnswer",
                table: "Test",
                type: "nvarchar(max)",
                nullable: true);

            migrationBuilder.AddColumn<DateTime>(
                name: "AnsweringTime",
                table: "TestAnswer",
                type: "datetime2",
                nullable: false,
                defaultValue: new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

            migrationBuilder.AddColumn<TimeSpan>(
                name: "AnsweringTimeOffset",
                table: "TestAnswer",
                type: "time",
                nullable: false,
                defaultValue: new TimeSpan(0, 0, 0, 0, 0));

            migrationBuilder.AddColumn<string>(
                name: "UserId",
                table: "TestAnswer",
                type: "nvarchar(450)",
                maxLength: 450,
                nullable: false,
                defaultValue: "");

            migrationBuilder.AddPrimaryKey(
                name: "PK_Test",
                table: "Test",
                column: "Id");

            migrationBuilder.AddPrimaryKey(
                name: "PK_TestAnswer",
                table: "TestAnswer",
                column: "Id");

            migrationBuilder.CreateTable(
                name: "WrongAnswer",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Answer = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    TestId = table.Column<int>(type: "int", nullable: false),
                    Time = table.Column<DateTime>(type: "datetime2", nullable: false),
                    UserId = table.Column<string>(type: "nvarchar(450)", maxLength: 450, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WrongAnswer", x => x.Id);
                    table.ForeignKey(
                        name: "FK_WrongAnswer_Test_TestId",
                        column: x => x.TestId,
                        principalTable: "Test",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_WrongAnswer_AspNetUsers_UserId",
                        column: x => x.UserId,
                        principalTable: "AspNetUsers",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.InsertData(
                table: "AspNetUsers",
                columns: new[] { "Id", "AccessFailedCount", "ConcurrencyStamp", "Email", "EmailConfirmed", "EmailNotificationsEnabled", "FirstName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "PushNotificationsEnabled", "SecondName", "SecurityStamp", "TwoFactorEnabled", "UserName" },
                values: new object[] { "c611530e-bebd-41a9-ace2-951550edbfa0", 0, "e4de8553-5c8e-46b1-ab5a-19052617edd2", "devadventcalendar@gmail.com", true, false, null, false, null, "DEVADVENTCALENDAR@GMAIL.COM", "DEVADVENTCALENDAR@GMAIL.COM", "AQAAAAEAACcQAAAAEEP5eQn4QlBy8BIluF8TjgbbgFJNJsG6RiPFRDqUXjfNlza1St6dhORcOj3vF1w7jA==", null, false, false, null, "DWAXVN2W4U5J3KSGI7V7KPLU3GBWFVJL", false, "devadventcalendar@gmail.com" });

            migrationBuilder.InsertData(
                table: "AspNetUserRoles",
                columns: new[] { "UserId", "RoleId" },
                values: new object[] { "c611530e-bebd-41a9-ace2-951550edbfa0", "1" });

            migrationBuilder.CreateIndex(
                name: "IX_TestAnswer_TestId",
                table: "TestAnswer",
                column: "TestId");

            migrationBuilder.CreateIndex(
                name: "IX_TestAnswer_UserId",
                table: "TestAnswer",
                column: "UserId");

            migrationBuilder.CreateIndex(
                name: "IX_WrongAnswer_TestId",
                table: "WrongAnswer",
                column: "TestId");

            migrationBuilder.CreateIndex(
                name: "IX_WrongAnswer_UserId",
                table: "WrongAnswer",
                column: "UserId");

            migrationBuilder.AddForeignKey(
                name: "FK_TestAnswer_Test_TestId",
                table: "TestAnswer",
                column: "TestId",
                principalTable: "Test",
                principalColumn: "Id",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_TestAnswer_AspNetUsers_UserId",
                table: "TestAnswer",
                column: "UserId",
                principalTable: "AspNetUsers",
                principalColumn: "Id",
                onDelete: ReferentialAction.Cascade);
        }
    }
}
