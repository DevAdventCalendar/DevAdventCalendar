@model KeyValuePair<int, PaginatedCollection<DevAdventCalendarCompetition.Models.Test.TestResultEntryViewModel>>
@using static DevAdventCalendarCompetition.Resources.ViewsMessages

@{
    var weekNumber = Model.Key;
    var entries = Model.Value;
    var prevDisabled = Model.Value != null && !Model.Value.HasPreviousPage ? "disabled" : "";
    var nextDisabled = Model.Value != null && !Model.Value.HasNextPage ? "disabled" : "";
}

@if (entries != null && entries.Any())
{
    <table class="table table-striped">
        <caption></caption>
        <thead>
        <tr>
            <th scope="col"  class="col-xs-1">#</th>
            <th scope="col" >@UserName</th>
            <th scope="col" >@CorrectAnswers</th>
            <th scope="col" >@WrongAnswers</th>
            <th scope="col" >@TotalScore</th>
        </tr>
        </thead>
        <tbody>
        @for (var i = 0; i < entries.Count; i++)
        {
            var testResult = entries[i];
            <tr>
                <th scope="row" class="col-xs-1">@(entries.PageIndex <= 1 ? i + 1 : (entries.PageSize * (entries.PageIndex - 1)) + i + 1)</th>
                <td>@testResult.UserName</td>
                <td>@testResult.CorrectAnswers</td>
                <td>@testResult.WrongAnswers</td>
                @if (entries.FirstOrDefault().FinalPoints != null)
                {
                    <td>@testResult.FinalPoints</td>
                }
                else
                {
                    var score = testResult.GetType()
                        .GetProperties()
                        .FirstOrDefault(p => p.Name.Contains($"Week{Model.Key}Points"))
                        .GetValue(testResult) as int?;

                    <td>@score.Value</td>
                }
            </tr>
        }
        </tbody>
    </table>

    <div class="row">
        <div class="col-xs-12">
            <a id="prevPage" href="#week1" onclick="GetResults(@weekNumber, @(entries.PageIndex - 1))"
               class="chris_btn @prevDisabled">
                @Previous
            </a>
            <a id="nextPage" href="#week1" onclick="GetResults(@weekNumber, @(entries.PageIndex + 1))"
               class="chris_btn @nextDisabled">
                @Next
            </a>
        </div>
    </div>
}
else
{
    <br />
    <div class="reveal animated" data-reveal-anim="fadeInDown" data-anim-delay="0.3s">
        <h4 class="mb-30">
            @switch (weekNumber)
            {
                case 1:
                    @Week1ScoreDescription
                    break;
                case 2:
                    @Week2ScoreDescription
                    break;
                case 3:
                    @Week3ScoreDescription
                    break;
                default:
                    @FinalScoreDescription
                    break;
            }
        </h4>
    </div>

     <img src="~/theme-2019/images/hanging.svg" alt="">
}