[1mdiff --git a/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Repository/BaseTestRepository.cs b/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Repository/BaseTestRepository.cs[m
[1mindex 3b9c9bb..b6da9f5 100644[m
[1m--- a/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Repository/BaseTestRepository.cs[m
[1m+++ b/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Repository/BaseTestRepository.cs[m
[36m@@ -25,13 +25,13 @@[m [mnamespace DevAdventCalendarCompetition.Repository[m
             _dbContext.SaveChanges();[m
         }[m
 [m
[31m-		public void AddWrongAnswer(TestWrongAnswer wrongAnswer)[m
[31m-		{[m
[31m-			_dbContext.Set<TestWrongAnswer>().Add(wrongAnswer);[m
[31m-			_dbContext.SaveChanges();[m
[31m-		}[m
[32m+[m[32m        public void AddWrongAnswer(TestWrongAnswer wrongAnswer)[m
[32m+[m[32m        {[m
[32m+[m[32m            _dbContext.Set<TestWrongAnswer>().Add(wrongAnswer);[m
[32m+[m[32m            _dbContext.SaveChanges();[m
[32m+[m[32m        }[m
 [m
[31m-		public void UpdateAnswer(TestAnswer testAnswer)[m
[32m+[m[32m        public void UpdateAnswer(TestAnswer testAnswer)[m
         {[m
             _dbContext.Set<TestAnswer>().Update(testAnswer);[m
             _dbContext.SaveChanges();[m
[1mdiff --git a/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Repository/Context/ApplicationDbContext.cs b/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Repository/Context/ApplicationDbContext.cs[m
[1mindex cfc3f4f..657c020 100644[m
[1m--- a/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Repository/Context/ApplicationDbContext.cs[m
[1m+++ b/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Repository/Context/ApplicationDbContext.cs[m
[36m@@ -4,25 +4,25 @@[m [musing Microsoft.EntityFrameworkCore;[m
 [m
 namespace DevAdventCalendarCompetition.Repository.Context[m
 {[m
[31m-    public class ApplicationDbContext : IdentityDbContext<ApplicationUser>[m
[31m-    {[m
[31m-        public DbSet<Test> Test { get; set; }[m
[32m+[m	[32mpublic class ApplicationDbContext : IdentityDbContext<ApplicationUser>[m
[32m+[m	[32m{[m
[32m+[m		[32mpublic DbSet<Test> Test { get; set; }[m
 [m
[31m-        public DbSet<TestAnswer> TestAnswer { get; set; }[m
[32m+[m		[32mpublic DbSet<TestAnswer> TestAnswer { get; set; }[m
 [m
 		public DbSet<TestWrongAnswer> TestWrongAnswer { get; set; }[m
 [m
 		public ApplicationDbContext(DbContextOptions<ApplicationDbContext> options)[m
[31m-            : base(options)[m
[31m-        {[m
[31m-        }[m
[32m+[m			[32m: base(options)[m
[32m+[m		[32m{[m
[32m+[m		[32m}[m
 [m
[31m-        protected override void OnModelCreating(ModelBuilder builder)[m
[31m-        {[m
[31m-            base.OnModelCreating(builder);[m
[31m-            // Customize the ASP.NET Identity model and override the defaults if needed.[m
[31m-            // For example, you can rename the ASP.NET Identity table names and more.[m
[31m-            // Add your customizations after calling base.OnModelCreating(builder);[m
[31m-        }[m
[31m-    }[m
[32m+[m		[32mprotected override void OnModelCreating(ModelBuilder builder)[m
[32m+[m		[32m{[m
[32m+[m			[32mbase.OnModelCreating(builder);[m
[32m+[m			[32m// Customize the ASP.NET Identity model and override the defaults if needed.[m
[32m+[m			[32m// For example, you can rename the ASP.NET Identity table names and more.[m
[32m+[m			[32m// Add your customizations after calling base.OnModelCreating(builder);[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Repository/Migrations/20181104175308_RenameTables.cs b/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Repository/Migrations/20181104175308_RenameTables.cs[m
[1mindex 4528bcd..d25f487 100644[m
[1m--- a/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Repository/Migrations/20181104175308_RenameTables.cs[m
[1m+++ b/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Repository/Migrations/20181104175308_RenameTables.cs[m
[36m@@ -49,4 +49,4 @@[m [mnamespace DevAdventCalendarCompetition.Repository.Migrations[m
                 onDelete: ReferentialAction.Restrict);[m
         }[m
     }[m
[31m-}[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Repository/Migrations/20181111223038_AddSponsorInfoToTest.cs b/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Repository/Migrations/20181111223038_AddSponsorInfoToTest.cs[m
[1mindex 535d246..2f469d4 100644[m
[1m--- a/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Repository/Migrations/20181111223038_AddSponsorInfoToTest.cs[m
[1m+++ b/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Repository/Migrations/20181111223038_AddSponsorInfoToTest.cs[m
[36m@@ -28,4 +28,4 @@[m [mnamespace DevAdventCalendarCompetition.Repository.Migrations[m
                 table: "Test");[m
         }[m
     }[m
[31m-}[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Repository/Migrations/20181121205537_WrongAnswer.cs b/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Repository/Migrations/20181121205537_WrongAnswer.cs[m
[1mindex 139c0a9..d360716 100644[m
[1m--- a/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Repository/Migrations/20181121205537_WrongAnswer.cs[m
[1m+++ b/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Repository/Migrations/20181121205537_WrongAnswer.cs[m
[36m@@ -4,44 +4,59 @@[m [musing System;[m
 [m
 namespace DevAdventCalendarCompetition.Repository.Migrations[m
 {[m
[31m-	public partial class WrongAnswer : Migration[m
[31m-	{[m
[31m-		protected override void Up(MigrationBuilder migrationBuilder)[m
[31m-		{[m
[31m-			migrationBuilder.CreateTable("WrongAnswer",[m
[31m-			columns: table => new[m
[31m-			{[m
[31m-				Id = table.Column<int>(nullable: false)[m
[31m-					.Annotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn),[m
[31m-				UserId = table.Column<string>(maxLength: 450, nullable: false),[m
[31m-				Time = table.Column<DateTime>(nullable: false),[m
[31m-				Answer = table.Column<string>(nullable: false)[m
[31m-			},[m
[31m-			constraints: table =>[m
[31m-			{[m
[31m-				table.PrimaryKey("PK_WrongAnswer", x => x.Id);[m
[31m-				table.ForeignKey([m
[31m-					name: "FK_WrongAnswer_AspNetUsers_UserId",[m
[31m-					column: x => x.UserId,[m
[31m-					principalTable: "AspNetUsers",[m
[31m-					principalColumn: "Id",[m
[31m-					onDelete: ReferentialAction.Restrict);[m
[31m-			});[m
[32m+[m[32m    public partial class WrongAnswer : Migration[m
[32m+[m[32m    {[m
[32m+[m[32m        protected override void Up(MigrationBuilder migrationBuilder)[m
[32m+[m[32m        {[m
[32m+[m[32m            migrationBuilder.CreateTable("WrongAnswer",[m
[32m+[m[32m            columns: table => new[m
[32m+[m[32m            {[m
[32m+[m[32m                Id = table.Column<int>(nullable: false)[m
[32m+[m[32m                    .Annotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn),[m
[32m+[m[32m                UserId = table.Column<string>(maxLength: 450, nullable: false),[m
[32m+[m[32m                Time = table.Column<DateTime>(nullable: false),[m
[32m+[m[32m                Answer = table.Column<string>(nullable: false),[m
[32m+[m[32m                TestId = table.Column<int>(nullable: false),[m
[32m+[m[32m            },[m
[32m+[m[32m            constraints: table =>[m
[32m+[m[32m            {[m
[32m+[m[32m                table.PrimaryKey("PK_WrongAnswer", x => x.Id);[m
[32m+[m[32m                table.ForeignKey([m
[32m+[m[32m                      name: "FK_WrongAnswer_Test_TestId",[m
[32m+[m[32m                      column: x => x.TestId,[m
[32m+[m[32m                      principalTable: "Test",[m
[32m+[m[32m                      principalColumn: "Id",[m
[32m+[m[32m                      onDelete: ReferentialAction.Cascade);[m
[32m+[m[32m                table.ForeignKey([m
[32m+[m[32m                    name: "FK_WrongAnswer_AspNetUsers_UserId",[m
[32m+[m[32m                    column: x => x.UserId,[m
[32m+[m[32m                    principalTable: "AspNetUsers",[m
[32m+[m[32m                    principalColumn: "Id",[m
[32m+[m[32m                    onDelete: ReferentialAction.Restrict);[m
[32m+[m[32m            });[m
 [m
[32m+[m[32m            migrationBuilder.CreateIndex([m
[32m+[m[32m               name: "IX_WrongAnswer_UserId",[m
[32m+[m[32m               table: "WrongAnswer",[m
[32m+[m[32m               column: "UserId");[m
 [m
[31m-			migrationBuilder.CreateIndex([m
[31m-			   name: "IX_WrongAnswer_UserId",[m
[31m-			   table: "WrongAnswer",[m
[31m-			   column: "UserId");[m
[31m-		}[m
[32m+[m[32m            migrationBuilder.CreateIndex([m
[32m+[m[32m              name: "IX_WrongAnswer_TestId",[m
[32m+[m[32m              table: "WrongAnswer",[m
[32m+[m[32m              column: "TestId");[m
[32m+[m[32m        }[m
 [m
[31m-		protected override void Down(MigrationBuilder migrationBuilder)[m
[31m-		{[m
[31m-			migrationBuilder.DropIndex([m
[31m-			  name: "IX_WrongAnswer_UserId",[m
[31m-			  table: "WrongAnswer");[m
[32m+[m[32m        protected override void Down(MigrationBuilder migrationBuilder)[m
[32m+[m[32m        {[m
[32m+[m[32m            migrationBuilder.DropIndex([m
[32m+[m[32m              name: "IX_WrongAnswer_UserId",[m
[32m+[m[32m              table: "WrongAnswer");[m
 [m
[31m-			migrationBuilder.DropTable("WrongAnswer");[m
[31m-		}[m
[31m-	}[m
[31m-}[m
[32m+[m[32m            migrationBuilder.DropIndex([m
[32m+[m[32m              name: "IX_WrongAnswer_TestId",[m
[32m+[m[32m              table: "WrongAnswer");[m
[32m+[m
[32m+[m[32m            migrationBuilder.DropTable("WrongAnswer");[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Repository/Models/TestWrongAnswer.cs b/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Repository/Models/TestWrongAnswer.cs[m
[1mindex 0efd506..3881eb0 100644[m
[1m--- a/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Repository/Models/TestWrongAnswer.cs[m
[1m+++ b/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Repository/Models/TestWrongAnswer.cs[m
[36m@@ -8,6 +8,12 @@[m [mnamespace DevAdventCalendarCompetition.Repository.Models[m
     public class TestWrongAnswer : ModelBase[m
     {[m
         [Required][m
[32m+[m[32m        [ForeignKey("Test")][m
[32m+[m[32m        public int TestId { get; set; }[m
[32m+[m
[32m+[m[32m        public Test Test { get; set; }[m
[32m+[m
[32m+[m[32m        [Required][m
         [MaxLength(450)][m
         [ForeignKey("User")][m
         public string UserId { get; set; }[m
[1mdiff --git a/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Services/AdminService.cs b/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Services/AdminService.cs[m
[1mindex f8b34ff..03f42cb 100644[m
[1m--- a/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Services/AdminService.cs[m
[1m+++ b/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Services/AdminService.cs[m
[36m@@ -12,16 +12,16 @@[m [mnamespace DevAdventCalendarCompetition.Services[m
     {[m
         private readonly IAdminRepository _adminRepository;[m
         private readonly IBaseTestRepository _baseTestRepository;[m
[31m-		private readonly IMapper _mapper;[m
[32m+[m[32m        private readonly IMapper _mapper;[m
 [m
         public AdminService([m
[31m-			IAdminRepository adminRepository, [m
[31m-			IBaseTestRepository baseTestRepository,[m
[31m-			IMapper mapper)[m
[32m+[m[32m            IAdminRepository adminRepository,[m
[32m+[m[32m            IBaseTestRepository baseTestRepository,[m
[32m+[m[32m            IMapper mapper)[m
         {[m
             _adminRepository = adminRepository;[m
             _baseTestRepository = baseTestRepository;[m
[31m-			_mapper = mapper;[m
[32m+[m[32m            _mapper = mapper;[m
         }[m
 [m
         public List<TestDto> GetAllTests()[m
[1mdiff --git a/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Services/BaseTestService.cs b/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Services/BaseTestService.cs[m
[1mindex b2e2d67..20aa29d 100644[m
[1m--- a/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Services/BaseTestService.cs[m
[1m+++ b/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Services/BaseTestService.cs[m
[36m@@ -10,14 +10,14 @@[m [mnamespace DevAdventCalendarCompetition.Services[m
     public class BaseTestService : IBaseTestService[m
     {[m
         private readonly IBaseTestRepository _baseTestRepository;[m
[31m-		private readonly IMapper _mapper;[m
[32m+[m[32m        private readonly IMapper _mapper;[m
 [m
         public BaseTestService([m
[31m-			IBaseTestRepository baseTestRepository,[m
[31m-			IMapper mapper)[m
[32m+[m[32m            IBaseTestRepository baseTestRepository,[m
[32m+[m[32m            IMapper mapper)[m
         {[m
             _baseTestRepository = baseTestRepository;[m
[31m-			_mapper = mapper;[m
[32m+[m[32m            _mapper = mapper;[m
         }[m
 [m
         public TestDto GetTestByNumber(int testNumber)[m
[36m@@ -51,16 +51,17 @@[m [mnamespace DevAdventCalendarCompetition.Services[m
             return testAnswerDto;[m
         }[m
 [m
[31m-		public void AddTestWrongAnswer(string userId, string wrongAnswer, DateTime wrongAnswerDate)[m
[31m-		{[m
[31m-			var testWrongAnswer = new TestWrongAnswer()[m
[31m-			{[m
[31m-				UserId = userId,[m
[31m-				Time = wrongAnswerDate,[m
[31m-				Answer = wrongAnswer[m
[31m-			};[m
[32m+[m[32m        public void AddTestWrongAnswer(string userId, int testId, string wrongAnswer, DateTime wrongAnswerDate)[m
[32m+[m[32m        {[m
[32m+[m[32m            var testWrongAnswer = new TestWrongAnswer()[m
[32m+[m[32m            {[m
[32m+[m[32m                UserId = userId,[m
[32m+[m[32m                Time = wrongAnswerDate,[m
[32m+[m[32m                Answer = wrongAnswer,[m
[32m+[m[32m                TestId = testId[m
[32m+[m[32m            };[m
 [m
[31m-			_baseTestRepository.AddWrongAnswer(testWrongAnswer);[m
[31m-		}[m
[31m-	}[m
[32m+[m[32m            _baseTestRepository.AddWrongAnswer(testWrongAnswer);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Services/HomeService.cs b/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Services/HomeService.cs[m
[1mindex 756aa3a..a07ebdb 100644[m
[1m--- a/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Services/HomeService.cs[m
[1m+++ b/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Services/HomeService.cs[m
[36m@@ -9,15 +9,15 @@[m [mnamespace DevAdventCalendarCompetition.Services[m
     public class HomeService : IHomeService[m
     {[m
         private readonly IHomeRepository _homeRepository;[m
[31m-		private readonly IMapper _mapper;[m
[32m+[m[32m        private readonly IMapper _mapper;[m
 [m
[31m-		public HomeService([m
[31m-			IHomeRepository homeRepository,[m
[31m-			IMapper mapper)[m
[32m+[m[32m        public HomeService([m
[32m+[m[32m            IHomeRepository homeRepository,[m
[32m+[m[32m            IMapper mapper)[m
         {[m
             _homeRepository = homeRepository;[m
[31m-			_mapper = mapper;[m
[31m-		}[m
[32m+[m[32m            _mapper = mapper;[m
[32m+[m[32m        }[m
 [m
         public TestDto GetCurrentTest()[m
         {[m
[1mdiff --git a/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Services/Interfaces/IBaseTestService.cs b/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Services/Interfaces/IBaseTestService.cs[m
[1mindex 98d8c16..c5fc605 100644[m
[1m--- a/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Services/Interfaces/IBaseTestService.cs[m
[1m+++ b/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Services/Interfaces/IBaseTestService.cs[m
[36m@@ -11,6 +11,6 @@[m [mnamespace DevAdventCalendarCompetition.Services.Interfaces[m
 [m
         TestAnswerDto GetAnswerByTestId(int testId);[m
 [m
[31m-		void AddTestWrongAnswer(string userId, string wrongAnswer, DateTime wrongAnswerDate);[m
[31m-	}[m
[32m+[m[32m        void AddTestWrongAnswer(string userId, int testId, string wrongAnswer, DateTime wrongAnswerDate);[m
[32m+[m[32m    }[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Tests/BaseTestServiceTest.cs b/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Tests/BaseTestServiceTest.cs[m
[1mindex 26ce75f..d4e6b0e 100644[m
[1m--- a/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Tests/BaseTestServiceTest.cs[m
[1m+++ b/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition.Tests/BaseTestServiceTest.cs[m
[36m@@ -10,151 +10,153 @@[m [musing Xunit;[m
 [m
 namespace DevAdventCalendarCompetition.Tests[m
 {[m
[31m-	public class BaseTestServiceTest[m
[31m-	{[m
[31m-		private readonly Mock<IBaseTestRepository> _baseTestRepositoryMock;[m
[31m-		private IMapper _mapper;[m
[31m-[m
[31m-		private Test _oldTest = new Test()[m
[31m-		{[m
[31m-			Id = 1,[m
[31m-			Number = 1,[m
[31m-			StartDate = DateTime.Today.AddDays(-2),[m
[31m-			EndDate = DateTime.Today.AddDays(-1),[m
[31m-			Answers = null[m
[31m-		};[m
[31m-[m
[31m-		private Test _futureTest = new Test()[m
[31m-		{[m
[31m-			Id = 1,[m
[31m-			Number = 1,[m
[31m-			StartDate = DateTime.Today.AddDays(1),[m
[31m-			EndDate = DateTime.Today.AddDays(2),[m
[31m-			Answers = null[m
[31m-		};[m
[31m-[m
[31m-		private Test _currentTest = new Test()[m
[31m-		{[m
[31m-			Id = 1,[m
[31m-			Number = 1,[m
[31m-			StartDate = DateTime.Today,[m
[31m-			EndDate = DateTime.Today.AddDays(1),[m
[31m-			Answers = null[m
[31m-		};[m
[31m-[m
[31m-		private TestAnswer _testAnswer = new TestAnswer()[m
[31m-		{[m
[31m-			Id = 1,[m
[31m-			Test = new Test(),[m
[31m-			TestId = 1,[m
[31m-			User = new ApplicationUser(),[m
[31m-			UserId = "1",[m
[31m-			AnsweringTimeOffset = new TimeSpan(),[m
[31m-			AnsweringTime = DateTime.Today[m
[31m-		};[m
[31m-[m
[31m-		private TestWrongAnswer _testWrongAnswer = new TestWrongAnswer()[m
[31m-		{[m
[31m-			Id = 1,[m
[31m-			User = new ApplicationUser(),[m
[31m-			UserId = "1",[m
[31m-			Time = DateTime.Today,[m
[31m-			Answer = "abcd"[m
[31m-		};[m
[31m-[m
[31m-		public BaseTestServiceTest()[m
[31m-		{[m
[31m-			_baseTestRepositoryMock = new Mock<IBaseTestRepository>();[m
[31m-		}[m
[31m-[m
[31m-		[Fact][m
[31m-		public void GetTestByNumber_DontGetOldTest()[m
[31m-		{[m
[31m-			//Arrange[m
[31m-			_baseTestRepositoryMock.Setup(mock => mock.GetByNumber(It.IsAny<int>())).Returns(_oldTest);[m
[31m-			_mapper = new MapperConfiguration(cfg => cfg.AddProfile<TestProfile>()).CreateMapper();[m
[31m-			var baseTestService = new BaseTestService(_baseTestRepositoryMock.Object, _mapper);[m
[31m-			//Act[m
[31m-			var result = baseTestService.GetTestByNumber(_oldTest.Number);[m
[31m-			//Assert[m
[31m-			Assert.Null(result);[m
[31m-			_baseTestRepositoryMock.Verify(mock => mock.GetByNumber(It.Is<int>(x => x.Equals(_oldTest.Number))), Times.Once);[m
[31m-		}[m
[31m-[m
[31m-		[Fact][m
[31m-		public void GetTestByNumber_DontGetFutureTest()[m
[31m-		{[m
[31m-			//Arange[m
[31m-			_baseTestRepositoryMock.Setup(mock => mock.GetByNumber(It.IsAny<int>())).Returns(_futureTest);[m
[31m-			_mapper = new MapperConfiguration(cfg => cfg.AddProfile<TestProfile>()).CreateMapper();[m
[31m-			var baseTestService = new BaseTestService(_baseTestRepositoryMock.Object, _mapper);[m
[31m-			//Act[m
[31m-			var result = baseTestService.GetTestByNumber(_futureTest.Number);[m
[31m-			//Assert[m
[31m-			Assert.Null(result);[m
[31m-			_baseTestRepositoryMock.Verify(mock => mock.GetByNumber(It.Is<int>(x => x.Equals(_futureTest.Number))), Times.Once());[m
[31m-		}[m
[31m-[m
[31m-		[Fact][m
[31m-		public void GetTestByNumber_ReturnCurrentTestDto()[m
[31m-		{[m
[31m-			//Arrange[m
[31m-			_baseTestRepositoryMock.Setup(mock => mock.GetByNumber(It.IsAny<int>())).Returns(_currentTest);[m
[31m-			_mapper = new MapperConfiguration(cfg => cfg.AddProfile<TestProfile>()).CreateMapper();[m
[31m-			var baseTestService = new BaseTestService(_baseTestRepositoryMock.Object, _mapper);[m
[31m-			//Act[m
[31m-			var result = baseTestService.GetTestByNumber(_currentTest.Number);[m
[31m-			//Assert[m
[31m-			Assert.IsType<TestDto>(result);[m
[31m-			_baseTestRepositoryMock.Verify(mock => mock.GetByNumber(It.Is<int>(x => x.Equals(_currentTest.Number))), Times.Once());[m
[31m-		}[m
[31m-[m
[31m-		[Fact][m
[31m-		public void GetAnswerByTestId_ReturnTestAnswerDto()[m
[31m-		{[m
[31m-			//Arrange[m
[31m-			_baseTestRepositoryMock.Setup(mock => mock.GetAnswerByTestId(It.IsAny<int>())).Returns(_testAnswer);[m
[31m-			_mapper = new MapperConfiguration(cfg => cfg.AddProfile<TestAnswerProfile>()).CreateMapper();[m
[31m-			var baseTestService = new BaseTestService(_baseTestRepositoryMock.Object, _mapper);[m
[31m-			//Act[m
[31m-			var result = baseTestService.GetAnswerByTestId(_testAnswer.Id);[m
[31m-			//Assert[m
[31m-			Assert.IsType<TestAnswerDto>(result);[m
[31m-			_baseTestRepositoryMock.Verify(mock => mock.GetAnswerByTestId(It.Is<int>(x => x.Equals(_testAnswer.Id))), Times.Once());[m
[31m-		}[m
[31m-[m
[31m-		[Fact][m
[31m-		public void AddTestAnswer()[m
[31m-		{[m
[31m-			//Arrange[m
[31m-			_baseTestRepositoryMock.Setup(mock => mock.AddAnswer(It.IsAny<TestAnswer>()));[m
[31m-			var baseTestService = new BaseTestService(_baseTestRepositoryMock.Object, _mapper);[m
[31m-			//Act[m
[31m-			baseTestService.AddTestAnswer(_testAnswer.TestId, _testAnswer.UserId, DateTime.Now);[m
[31m-			//Assert[m
[31m-			_baseTestRepositoryMock.Verify(mock => mock.AddAnswer(It.Is<TestAnswer>(x => x.UserId == _testAnswer.UserId && x.TestId == _testAnswer.TestId)), Times.Once());[m
[31m-		}[m
[31m-[m
[31m-[m
[31m-		[Fact][m
[31m-		public void AddTestWrongAnswer()[m
[31m-		{[m
[31m-			//Arrange[m
[31m-			_baseTestRepositoryMock.Setup(mock => mock.AddWrongAnswer(It.IsAny<TestWrongAnswer>()));[m
[31m-			var baseTestService = new BaseTestService(_baseTestRepositoryMock.Object, _mapper);[m
[31m-[m
[31m-			//Act[m
[31m-			baseTestService.AddTestWrongAnswer(_testWrongAnswer.UserId, _testWrongAnswer.Answer, _testWrongAnswer.Time);[m
[31m-[m
[31m-			//Assert[m
[31m-			_baseTestRepositoryMock.Verify([m
[31m-				mock => mock.AddWrongAnswer([m
[31m-					It.Is<TestWrongAnswer>([m
[31m-						x => x.UserId == _testWrongAnswer.UserId[m
[31m-						&& x.Time == _testWrongAnswer.Time[m
[31m-						&& x.Answer == _testWrongAnswer.Answer[m
[31m-					)[m
[31m-				), Times.Once());[m
[31m-		}[m
[31m-	}[m
[32m+[m[32m    public class BaseTestServiceTest[m
[32m+[m[32m    {[m
[32m+[m[32m        private readonly Mock<IBaseTestRepository> _baseTestRepositoryMock;[m
[32m+[m[32m        private IMapper _mapper;[m
[32m+[m
[32m+[m[32m        private Test _oldTest = new Test()[m
[32m+[m[32m        {[m
[32m+[m[32m            Id = 1,[m
[32m+[m[32m            Number = 1,[m
[32m+[m[32m            StartDate = DateTime.Today.AddDays(-2),[m
[32m+[m[32m            EndDate = DateTime.Today.AddDays(-1),[m
[32m+[m[32m            Answers = null[m
[32m+[m[32m        };[m
[32m+[m
[32m+[m[32m        private Test _futureTest = new Test()[m
[32m+[m[32m        {[m
[32m+[m[32m            Id = 1,[m
[32m+[m[32m            Number = 1,[m
[32m+[m[32m            StartDate = DateTime.Today.AddDays(1),[m
[32m+[m[32m            EndDate = DateTime.Today.AddDays(2),[m
[32m+[m[32m            Answers = null[m
[32m+[m[32m        };[m
[32m+[m
[32m+[m[32m        private Test _currentTest = new Test()[m
[32m+[m[32m        {[m
[32m+[m[32m            Id = 1,[m
[32m+[m[32m            Number = 1,[m
[32m+[m[32m            StartDate = DateTime.Today,[m
[32m+[m[32m            EndDate = DateTime.Today.AddDays(1),[m
[32m+[m[32m            Answers = null[m
[32m+[m[32m        };[m
[32m+[m
[32m+[m[32m        private TestAnswer _testAnswer = new TestAnswer()[m
[32m+[m[32m        {[m
[32m+[m[32m            Id = 1,[m
[32m+[m[32m            Test = new Test(),[m
[32m+[m[32m            TestId = 1,[m
[32m+[m[32m            User = new ApplicationUser(),[m
[32m+[m[32m            UserId = "1",[m
[32m+[m[32m            AnsweringTimeOffset = new TimeSpan(),[m
[32m+[m[32m            AnsweringTime = DateTime.Today[m
[32m+[m[32m        };[m
[32m+[m
[32m+[m[32m        private TestWrongAnswer _testWrongAnswer = new TestWrongAnswer()[m
[32m+[m[32m        {[m
[32m+[m[32m            Id = 1,[m
[32m+[m[32m            Test = new Test(),[m
[32m+[m[32m            TestId = 1,[m
[32m+[m[32m            User = new ApplicationUser(),[m
[32m+[m[32m            UserId = "1",[m
[32m+[m[32m            Time = DateTime.Today,[m
[32m+[m[32m            Answer = "abcd"[m
[32m+[m[32m        };[m
[32m+[m
[32m+[m[32m        public BaseTestServiceTest()[m
[32m+[m[32m        {[m
[32m+[m[32m            _baseTestRepositoryMock = new Mock<IBaseTestRepository>();[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        [Fact][m
[32m+[m[32m        public void GetTestByNumber_DontGetOldTest()[m
[32m+[m[32m        {[m
[32m+[m[32m            //Arrange[m
[32m+[m[32m            _baseTestRepositoryMock.Setup(mock => mock.GetByNumber(It.IsAny<int>())).Returns(_oldTest);[m
[32m+[m[32m            _mapper = new MapperConfiguration(cfg => cfg.AddProfile<TestProfile>()).CreateMapper();[m
[32m+[m[32m            var baseTestService = new BaseTestService(_baseTestRepositoryMock.Object, _mapper);[m
[32m+[m[32m            //Act[m
[32m+[m[32m            var result = baseTestService.GetTestByNumber(_oldTest.Number);[m
[32m+[m[32m            //Assert[m
[32m+[m[32m            Assert.Null(result);[m
[32m+[m[32m            _baseTestRepositoryMock.Verify(mock => mock.GetByNumber(It.Is<int>(x => x.Equals(_oldTest.Number))), Times.Once);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        [Fact][m
[32m+[m[32m        public void GetTestByNumber_DontGetFutureTest()[m
[32m+[m[32m        {[m
[32m+[m[32m            //Arange[m
[32m+[m[32m            _baseTestRepositoryMock.Setup(mock => mock.GetByNumber(It.IsAny<int>())).Returns(_futureTest);[m
[32m+[m[32m            _mapper = new MapperConfiguration(cfg => cfg.AddProfile<TestProfile>()).CreateMapper();[m
[32m+[m[32m            var baseTestService = new BaseTestService(_baseTestRepositoryMock.Object, _mapper);[m
[32m+[m[32m            //Act[m
[32m+[m[32m            var result = baseTestService.GetTestByNumber(_futureTest.Number);[m
[32m+[m[32m            //Assert[m
[32m+[m[32m            Assert.Null(result);[m
[32m+[m[32m            _baseTestRepositoryMock.Verify(mock => mock.GetByNumber(It.Is<int>(x => x.Equals(_futureTest.Number))), Times.Once());[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        [Fact][m
[32m+[m[32m        public void GetTestByNumber_ReturnCurrentTestDto()[m
[32m+[m[32m        {[m
[32m+[m[32m            //Arrange[m
[32m+[m[32m            _baseTestRepositoryMock.Setup(mock => mock.GetByNumber(It.IsAny<int>())).Returns(_currentTest);[m
[32m+[m[32m            _mapper = new MapperConfiguration(cfg => cfg.AddProfile<TestProfile>()).CreateMapper();[m
[32m+[m[32m            var baseTestService = new BaseTestService(_baseTestRepositoryMock.Object, _mapper);[m
[32m+[m[32m            //Act[m
[32m+[m[32m            var result = baseTestService.GetTestByNumber(_currentTest.Number);[m
[32m+[m[32m            //Assert[m
[32m+[m[32m            Assert.IsType<TestDto>(result);[m
[32m+[m[32m            _baseTestRepositoryMock.Verify(mock => mock.GetByNumber(It.Is<int>(x => x.Equals(_currentTest.Number))), Times.Once());[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        [Fact][m
[32m+[m[32m        public void GetAnswerByTestId_ReturnTestAnswerDto()[m
[32m+[m[32m        {[m
[32m+[m[32m            //Arrange[m
[32m+[m[32m            _baseTestRepositoryMock.Setup(mock => mock.GetAnswerByTestId(It.IsAny<int>())).Returns(_testAnswer);[m
[32m+[m[32m            _mapper = new MapperConfiguration(cfg => cfg.AddProfile<TestAnswerProfile>()).CreateMapper();[m
[32m+[m[32m            var baseTestService = new BaseTestService(_baseTestRepositoryMock.Object, _mapper);[m
[32m+[m[32m            //Act[m
[32m+[m[32m            var result = baseTestService.GetAnswerByTestId(_testAnswer.Id);[m
[32m+[m[32m            //Assert[m
[32m+[m[32m            Assert.IsType<TestAnswerDto>(result);[m
[32m+[m[32m            _baseTestRepositoryMock.Verify(mock => mock.GetAnswerByTestId(It.Is<int>(x => x.Equals(_testAnswer.Id))), Times.Once());[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        [Fact][m
[32m+[m[32m        public void AddTestAnswer()[m
[32m+[m[32m        {[m
[32m+[m[32m            //Arrange[m
[32m+[m[32m            _baseTestRepositoryMock.Setup(mock => mock.AddAnswer(It.IsAny<TestAnswer>()));[m
[32m+[m[32m            var baseTestService = new BaseTestService(_baseTestRepositoryMock.Object, _mapper);[m
[32m+[m[32m            //Act[m
[32m+[m[32m            baseTestService.AddTestAnswer(_testAnswer.TestId, _testAnswer.UserId, DateTime.Now);[m
[32m+[m[32m            //Assert[m
[32m+[m[32m            _baseTestRepositoryMock.Verify(mock => mock.AddAnswer(It.Is<TestAnswer>(x => x.UserId == _testAnswer.UserId && x.TestId == _testAnswer.TestId)), Times.Once());[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        [Fact][m
[32m+[m[32m        public void AddTestWrongAnswer()[m
[32m+[m[32m        {[m
[32m+[m[32m            //Arrange[m
[32m+[m[32m            _baseTestRepositoryMock.Setup(mock => mock.AddWrongAnswer(It.IsAny<TestWrongAnswer>()));[m
[32m+[m[32m            var baseTestService = new BaseTestService(_baseTestRepositoryMock.Object, _mapper);[m
[32m+[m
[32m+[m[32m            //Act[m
[32m+[m[32m            baseTestService.AddTestWrongAnswer(_testWrongAnswer.UserId, _testWrongAnswer.TestId, _testWrongAnswer.Answer, _testWrongAnswer.Time);[m
[32m+[m
[32m+[m[32m            //Assert[m
[32m+[m[32m            _baseTestRepositoryMock.Verify([m
[32m+[m[32m                mock => mock.AddWrongAnswer([m
[32m+[m[32m                    It.Is<TestWrongAnswer>([m
[32m+[m[32m                        x => x.UserId == _testWrongAnswer.UserId[m
[32m+[m[32m                        && x.Time == _testWrongAnswer.Time[m
[32m+[m[32m                        && x.Answer == _testWrongAnswer.Answer[m
[32m+[m[32m                        && x.TestId == _testWrongAnswer.TestId[m
[32m+[m[32m                    )[m
[32m+[m[32m                ), Times.Once());[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition/Controllers/BaseTestController.cs b/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition/Controllers/BaseTestController.cs[m
[1mindex 614a4fd..a2298da 100644[m
[1m--- a/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition/Controllers/BaseTestController.cs[m
[1m+++ b/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition/Controllers/BaseTestController.cs[m
[36m@@ -17,10 +17,12 @@[m [mnamespace DevAdventCalendarCompetition.Controllers[m
             _baseTestService = baseTestService;[m
         }[m
 [m
[31m-		public void SaveWrongAnswer(string wrongAnswer)[m
[31m-		{[m
[31m-			_baseTestService.AddTestWrongAnswer(User.FindFirstValue(ClaimTypes.NameIdentifier), wrongAnswer, DateTime.Now);[m
[31m-		}[m
[32m+[m[32m        public void SaveWrongAnswer(string wrongAnswer, int testNumber)[m
[32m+[m[32m        {[m
[32m+[m[32m            var testDto = _baseTestService.GetTestByNumber(testNumber);[m
[32m+[m
[32m+[m[32m            _baseTestService.AddTestWrongAnswer(User.FindFirstValue(ClaimTypes.NameIdentifier), testDto.Id, wrongAnswer, DateTime.Now);[m
[32m+[m[32m        }[m
 [m
         public ActionResult SaveAnswerAndRedirect(int testNumber)[m
         {[m
[1mdiff --git a/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition/Controllers/Test1Controller.cs b/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition/Controllers/Test1Controller.cs[m
[1mindex 3464a47..d0d87d0 100644[m
[1m--- a/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition/Controllers/Test1Controller.cs[m
[1m+++ b/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition/Controllers/Test1Controller.cs[m
[36m@@ -21,20 +21,22 @@[m [mnamespace DevAdventCalendarCompetition.Controllers[m
         [CanStartTest(TestNumber = 1)][m
         public ActionResult Index(string answer = "")[m
         {[m
[32m+[m[32m            var testNumber = 1;[m
[32m+[m
             var fixedAnswer = answer.ToUpper().Replace(" ", "");[m
 [m
             if (fixedAnswer != "0100111101000010010010100100010101000011010101000100100101010110010010010101010001011001")[m
             {[m
[31m-				SaveWrongAnswer(fixedAnswer);[m
[32m+[m[32m                SaveWrongAnswer(fixedAnswer, testNumber);[m
 [m
[31m-				ModelState.AddModelError("", "Answer is not correct. Try again.");[m
[32m+[m[32m                ModelState.AddModelError("", "Answer is not correct. Try again.");[m
 [m
[31m-                var test = _baseTestService.GetTestByNumber(1);[m
[32m+[m[32m                var test = _baseTestService.GetTestByNumber(testNumber);[m
 [m
                 return View("Index", test);[m
             }[m
 [m
[31m-            return SaveAnswerAndRedirect(1);[m
[32m+[m[32m            return SaveAnswerAndRedirect(testNumber);[m
         }[m
     }[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition/Controllers/Test2Controller.cs b/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition/Controllers/Test2Controller.cs[m
[1mindex 3c1676d..6973815 100644[m
[1m--- a/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition/Controllers/Test2Controller.cs[m
[1m+++ b/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition/Controllers/Test2Controller.cs[m
[36m@@ -21,19 +21,20 @@[m [mnamespace DevAdventCalendarCompetition.Controllers[m
         [CanStartTest(TestNumber = 2)][m
         public ActionResult Index(string answer = "")[m
         {[m
[32m+[m[32m            var testNumber = 2;[m
             var fixedAnswer = answer.ToUpper().Replace(" ", "");[m
 [m
             if (fixedAnswer != "ANVQOFUHUFKUESDQMF")[m
             {[m
[31m-				SaveWrongAnswer(fixedAnswer);[m
[32m+[m[32m                SaveWrongAnswer(fixedAnswer, testNumber);[m
 [m
[31m-				ModelState.AddModelError("", "Answer is not correct. Try again.");[m
[32m+[m[32m                ModelState.AddModelError("", "Answer is not correct. Try again.");[m
 [m
[31m-                var test = _baseTestService.GetTestByNumber(2);[m
[32m+[m[32m                var test = _baseTestService.GetTestByNumber(testNumber);[m
                 return View("Index", test);[m
             }[m
 [m
[31m-            return SaveAnswerAndRedirect(2);[m
[32m+[m[32m            return SaveAnswerAndRedirect(testNumber);[m
         }[m
     }[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition/Controllers/Test3Controller.cs b/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition/Controllers/Test3Controller.cs[m
[1mindex 9bdfdd5..d439cd0 100644[m
[1m--- a/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition/Controllers/Test3Controller.cs[m
[1m+++ b/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition/Controllers/Test3Controller.cs[m
[36m@@ -21,20 +21,21 @@[m [mnamespace DevAdventCalendarCompetition.Controllers[m
         [CanStartTest(TestNumber = 3)][m
         public ActionResult Index(string answer = "")[m
         {[m
[32m+[m[32m            var testNumber = 3;[m
             var fixedAnswer = answer.ToUpper().Replace(" ", "");[m
 [m
             if (fixedAnswer != "READYMIX")[m
             {[m
[31m-				SaveWrongAnswer(fixedAnswer);[m
[32m+[m[32m                SaveWrongAnswer(fixedAnswer, testNumber);[m
 [m
[31m-				ModelState.AddModelError("", "Answer is not correct. Try again.");[m
[32m+[m[32m                ModelState.AddModelError("", "Answer is not correct. Try again.");[m
 [m
[31m-                var test = _baseTestService.GetTestByNumber(3);[m
[32m+[m[32m                var test = _baseTestService.GetTestByNumber(testNumber);[m
 [m
                 return View("Index", test);[m
             }[m
 [m
[31m-            return SaveAnswerAndRedirect(3);[m
[32m+[m[32m            return SaveAnswerAndRedirect(testNumber);[m
         }[m
     }[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition/Controllers/Test4Controller.cs b/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition/Controllers/Test4Controller.cs[m
[1mindex ca20db3..e9d23f6 100644[m
[1m--- a/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition/Controllers/Test4Controller.cs[m
[1m+++ b/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition/Controllers/Test4Controller.cs[m
[36m@@ -23,21 +23,22 @@[m [mnamespace DevAdventCalendarCompetition.Controllers[m
         [CanStartTest(TestNumber = 4)][m
         public ActionResult Index(string answer = "")[m
         {[m
[32m+[m[32m            var testNumber = 4;[m
             var answers = new[] { "TALOFA", "FALOPA", "TALOFALAVA", "MALOLESOIFUA", "MALO" };[m
             var fixedAnswer = answer.ToUpper().Replace(" ", "");[m
 [m
             if (!answers.Contains(fixedAnswer))[m
             {[m
[31m-				SaveWrongAnswer(fixedAnswer);[m
[32m+[m[32m                SaveWrongAnswer(fixedAnswer, testNumber);[m
 [m
[31m-				ModelState.AddModelError("", "Answer is not correct. Try again.");[m
[32m+[m[32m                ModelState.AddModelError("", "Answer is not correct. Try again.");[m
 [m
[31m-                var test = _baseTestService.GetTestByNumber(4);[m
[32m+[m[32m                var test = _baseTestService.GetTestByNumber(testNumber);[m
 [m
                 return View("Index", test);[m
             }[m
 [m
[31m-            return SaveAnswerAndRedirect(4);[m
[32m+[m[32m            return SaveAnswerAndRedirect(testNumber);[m
         }[m
     }[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition/Controllers/Test5Controller.cs b/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition/Controllers/Test5Controller.cs[m
[1mindex c8ff573..1a6b816 100644[m
[1m--- a/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition/Controllers/Test5Controller.cs[m
[1m+++ b/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition/Controllers/Test5Controller.cs[m
[36m@@ -22,6 +22,7 @@[m [mnamespace DevAdventCalendarCompetition.Controllers[m
         [CanStartTest(TestNumber = 5)][m
         public ActionResult Index(string answer = "")[m
         {[m
[32m+[m[32m            var testNumber = 5;[m
             var fixedAnswer = answer.ToUpper().Replace(" ", "").Replace(".", ",");[m
             double integralSolution = 0;[m
             double.TryParse(fixedAnswer, out integralSolution);[m
[36m@@ -29,16 +30,16 @@[m [mnamespace DevAdventCalendarCompetition.Controllers[m
 [m
             if (integralSolution != 44.0)[m
             {[m
[31m-				SaveWrongAnswer(fixedAnswer);[m
[32m+[m[32m                SaveWrongAnswer(fixedAnswer, testNumber);[m
 [m
[31m-				ModelState.AddModelError("", "Answer is not correct. Try again.");[m
[32m+[m[32m                ModelState.AddModelError("", "Answer is not correct. Try again.");[m
 [m
[31m-                var test = _baseTestService.GetTestByNumber(5);[m
[32m+[m[32m                var test = _baseTestService.GetTestByNumber(testNumber);[m
 [m
                 return View("Index", test);[m
             }[m
 [m
[31m-            return SaveAnswerAndRedirect(5);[m
[32m+[m[32m            return SaveAnswerAndRedirect(testNumber);[m
         }[m
     }[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition/Controllers/Test6Controller.cs b/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition/Controllers/Test6Controller.cs[m
[1mindex 95d528c..0ae228e 100644[m
[1m--- a/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition/Controllers/Test6Controller.cs[m
[1m+++ b/src/DevAdventCalendarCompetition/DevAdventCalendarCompetition/Controllers/Test6Controller.cs[m
[36m@@ -21,20 +21,21 @@[m [mnamespace DevAdventCalendarCompetition.Controllers[m
         [CanStartTest(TestNumber = 6)][m
         public ActionResult Index(string answer = "")[m
         {[m
[32m+[m[32m            var testNumber = 6;[m
             var fixedAnswer = answer.ToUpper().Replace(" ", "");[m
 [m
             if (fixedAnswer != "PEOPLE")[m
             {[m
[31m-				SaveWrongAnswer(fixedAnswer);[m
[32m+[m[32m                SaveWrongAnswer(fixedAnswer, testNumber);[m
 [m
[31m-				ModelState.AddModelError("", "Answer is not correct. Try again.");[m
[32m+[m[32m                ModelState.AddModelError("", "Answer is not correct. Try again.");[m
 [m
[31m-                var test = _baseTestService.GetTestByNumber(6);[m
[32m+[m[32m                var test = _baseTestService.GetTestByNumber(testNumber);[m
 [m
                 return View("Index", test);[m
             }[m
 [m
[31m-            return SaveAnswerAndRedirect(6);[m
[32m+[m[32m            return SaveAnswerAndRedirect(testNumber);[m
         }[m
     }[m
 }[m
\ No newline at end of file[m
