@using System.Linq
@using DevAdventCalendarCompetition.Services
@model LoginViewModel

@inject IdentityService IdentityService

@{
    ViewData["Title"] = "Zaloguj";
}

<h2>@ViewData["Title"]</h2>
<div class="content-centered">
        <section>
            <form asp-route-returnurl="@ViewData["ReturnUrl"]" method="post">
                <div asp-validation-summary="All" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Email">Email</label>
                    <input asp-for="Email" class="form-control" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Password">Hasło</label>
                    <input asp-for="Password" class="form-control" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <div class="checkbox">
                        <label asp-for="RememberMe">
                            <input asp-for="RememberMe" />
                            @Html.DisplayNameFor(m => m.RememberMe)
                        </label>
                    </div>
                </div>
                <div class="form-group">
                    <div class="row content-centered">
                        <button type="submit" class="btn btn-default">Zaloguj</button>
                    </div>

                </div>
                <div class="form-group">
                    <p>
                        <a asp-action="ForgotPassword">Zapomniałeś/aś hasła?</a>
                    </p>
                    <p>
                        <a asp-action="Register" asp-route-returnurl="@ViewData["ReturnUrl"]">Zarejestrować nowego użytkownika?</a>
                    </p>
                </div>
            </form>
        </section>
    </div>

    @{

        var externalProviders = await IdentityService.GetExternalAuthenticationSchemes();

        if (externalProviders != null && externalProviders.Count == 0)
        {

        }
        else
        {
            <div class="col-md-6 col-md-offset-2">
                <section>
                    <h4>Użyj innego sposobu logowania.</h4>
                    <form asp-action="ExternalLogin" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal">
                        <div>
                            <p>
                                @foreach (var provider in externalProviders)
                                {
                                    <button type="submit" class="btn btn-default" name="provider" value="@provider.Name" title="Zaloguj używając konta @provider.DisplayName">@provider.Name</button>
                                }
                            </p>
                        </div>
                    </form>
                </section>
            </div>
        }
    }
    <div class="row content-centered">
        <img id="santa" src="~/images/santa.JPG" alt="Święty Mikołaj" />
    </div>

    @section Scripts {
        @await Html.PartialAsync("_ValidationScriptsPartial")
    }
