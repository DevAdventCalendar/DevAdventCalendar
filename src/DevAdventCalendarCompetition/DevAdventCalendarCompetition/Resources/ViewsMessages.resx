<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>O nas</value>
  </data>
  <data name="Accept" xml:space="preserve">
    <value>Akceptuj</value>
  </data>
  <data name="AccountManagement" xml:space="preserve">
    <value>Zarządzanie kontem</value>
  </data>
  <data name="AddLocalAccount" xml:space="preserve">
    <value>Nie masz lokalnego loginu/hasła dla tej strony. Dodaj lokalne konto, żeby móc się logować.</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Powrót</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Zmiana hasła</value>
  </data>
  <data name="ChangeYourPassword" xml:space="preserve">
    <value>Zmień hasło</value>
  </data>
  <data name="Contact" xml:space="preserve">
    <value>Kontakt</value>
  </data>
  <data name="CorrectAnswer" xml:space="preserve">
    <value>Poprawna odpowiedź: {0}</value>
  </data>
  <data name="DevelopmentErrorFullDescription1" xml:space="preserve">
    <value>Swapping to &lt;strong&gt;Development&lt;/strong&gt; environment will display more detailed information about the error that occurred.</value>
  </data>
  <data name="DevelopmentErrorFullDescription2" xml:space="preserve">
    <value>&lt;strong&gt;Development environment should not be enabled in deployed applications&lt;/strong&gt;, as it can result in sensitive information from exceptions being displayed to end users. For local debugging, development environment can be enabled by setting the &lt;strong&gt;ASPNETCORE_ENVIRONMENT&lt;/strong&gt; environment variable to &lt;strong&gt;Development&lt;/strong&gt;, and restarting the application.</value>
  </data>
  <data name="DevelopmentMode" xml:space="preserve">
    <value>Development Mode</value>
  </data>
  <data name="EmailAlreadyInDatabase" xml:space="preserve">
    <value>Ten adres email już mamy w swojej bazie :)</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error.</value>
  </data>
  <data name="ErrorDesc" xml:space="preserve">
    <value>An error occurred while processing your request.</value>
  </data>
  <data name="GiftFromElfs" xml:space="preserve">
    <value>A oto prezent, jaki otrzymujesz od Elfów za otwarcie okienka</value>
  </data>
  <data name="GoodAnswer" xml:space="preserve">
    <value>Odpowiedź poprawna!</value>
  </data>
  <data name="Gratulations" xml:space="preserve">
    <value>Gratulacje!</value>
  </data>
  <data name="HeadDescription" xml:space="preserve">
    <value>DevAdventCalendar - inicjatywa łącząca tradycję kalendarza adwentowego z programowaniem. Celem jest stworzenie konkursu dla osób związanych ze światem IT.</value>
  </data>
  <data name="HeadTitle" xml:space="preserve">
    <value>DevAdventCalendar - programistyczny kalendarz adwentowy</value>
  </data>
  <data name="IntroParagraph1" xml:space="preserve">
    <value>Gdy na zegarze 20 wybije</value>
  </data>
  <data name="IntroParagraph2" xml:space="preserve">
    <value>okienko swoją zagadkę odkryje...</value>
  </data>
  <data name="IntroParagraph3" xml:space="preserve">
    <value>Wiec spiesz się i co dzień okienka otwieraj.</value>
  </data>
  <data name="IntroParagraph4" xml:space="preserve">
    <value>Zdobywaj punkty i nagrody zbieraj!</value>
  </data>
  <data name="LearnMore" xml:space="preserve">
    <value>Dowiedz się więcej</value>
  </data>
  <data name="LockOut" xml:space="preserve">
    <value>Zablokowany</value>
  </data>
  <data name="LockOutDescription" xml:space="preserve">
    <value>To konto zostało zablokowane. Spróbuj ponownie później</value>
  </data>
  <data name="ManageYourAccount" xml:space="preserve">
    <value>Twoje konto</value>
  </data>
  <data name="Newsletter" xml:space="preserve">
    <value>Newsletter</value>
  </data>
  <data name="Policy" xml:space="preserve">
    <value>Regulamin</value>
  </data>
  <data name="PrivacyPolicy" xml:space="preserve">
    <value>Polityka prywatności</value>
  </data>
  <data name="Prizes" xml:space="preserve">
    <value>Nagrody</value>
  </data>
  <data name="Profil" xml:space="preserve">
    <value>Profil</value>
  </data>
  <data name="Puzzle" xml:space="preserve">
    <value>Zagadka {0}</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Rejestruj</value>
  </data>
  <data name="Results" xml:space="preserve">
    <value>Wyniki</value>
  </data>
  <data name="RodoAgreeMissing" xml:space="preserve">
    <value>Brakuje zgody na przetwarzanie danych :(</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Zapisz</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>Wyślij</value>
  </data>
  <data name="SendVerificationEmail" xml:space="preserve">
    <value>Wyślij ponownie weryfikacyjny e-mail</value>
  </data>
  <data name="SetPassword" xml:space="preserve">
    <value>Ustaw hasło</value>
  </data>
  <data name="SignIn" xml:space="preserve">
    <value>Zaloguj</value>
  </data>
  <data name="SignOut" xml:space="preserve">
    <value>Wyloguj</value>
  </data>
  <data name="SponsorOfTheDay" xml:space="preserve">
    <value>Sponsorem dnia jest</value>
  </data>
  <data name="Sponsors" xml:space="preserve">
    <value>Sponsorzy</value>
  </data>
  <data name="ThankYouForSubscription" xml:space="preserve">
    <value>Dziękujemy za potwierdzenie subskrypcji! Teraz wiemy, że Ty to Ty :)</value>
  </data>
  <data name="UserAlreadyAnswered" xml:space="preserve">
    <value>Ho ho! Już odpowiedziałeś na to pytanie, brawo :)</value>
  </data>
  <data name="WeDeletedYourEmail" xml:space="preserve">
    <value>Usunęliśmy Twój adres email z bazy</value>
  </data>
  <data name="WeRemovedWhiteSpaces" xml:space="preserve">
    <value>Nie martw się, dla uproszczenia usuniemy spacje z odpowiedzi</value>
  </data>
  <data name="WeUseCookies" xml:space="preserve">
    <value>Serwis wykorzystuje pliki cookies. Korzystając ze strony wyrażasz zgodę na wykorzystywanie plików cookies.</value>
  </data>
  <data name="YouAreLateWithAnswer" xml:space="preserve">
    <value>Niestety, spóźniłeś się z odpowiedzią na to pytanie :(</value>
  </data>
  <data name="YouHaveEmailPleaseConfirm" xml:space="preserve">
    <value>Dziękujemy za zainteresowanie :) Na Twojej skrzynce powinna już czekać wiadomość, kliknij link w niej zawarty, aby potwierdzić swój email :)</value>
  </data>
  <data name="YourAnswer" xml:space="preserve">
    <value>Twoja odpowiedź</value>
  </data>
</root>