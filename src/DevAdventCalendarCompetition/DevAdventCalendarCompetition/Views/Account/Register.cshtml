@using DevAdventCalendarCompetition.Services
@model RegisterViewModel

@inject IdentityService IdentityService

@{
    ViewData["Title"] = "Rejestracja";
}

<div class="breadcrumb_area mb-30">
    <div class="container">
        <div class="row">
            <div class="breadcrumb_wrapper">
                <div class="page_title">
                    <h3>@ViewData["Title"]</h3>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container mb-30">
    <div class="row">
        <div class="col-md-6">
            <div class="area_title">
                <h3 class="black">Załóż nowe konto</h3>
            </div>
            <form asp-route-returnUrl="@ViewData["ReturnUrl"]" method="post" class="contact_form">

                <div class="form-group">
                    <div class="text_field text_field_default">
                        <input asp-for="Email" placeholder="Email" value="@ViewData["Email"]" />
                    </div>
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <div class="text_field text_field_default">
                        <input asp-for="Password" placeholder="Hasło" />
                    </div>
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <div class="text_field text_field_default">
                        <input asp-for="ConfirmPassword" placeholder="Potwierdź hasło" />
                    </div>
                    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                </div>

                <div class="text-center mb-30">
                    <button type="submit" class="chris_btn">Zarejestruj</button>
                </div>
            </form>
        </div>

        <div class="col-md-6">
            @{
                var externalProviders = await IdentityService.GetExternalAuthenticationSchemes();

                if (externalProviders != null && externalProviders.Count > 0)
                {
                    <div class="area_title">
                        <h3 class="black">Lub zaloguj przez</h3>
                    </div>
                    <form asp-action="ExternalLogin" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="contact_form">
                        <div class="row">
                            @foreach (var provider in externalProviders)
                            {
                                <div class="col-xs-6 col-sm-3 col-md-6 col-lg-4 mb-20 text-center">
                                    <button style="width:150px" type="submit" class="btn btn-social btn-@provider.Name.ToLower()" name="provider" value="@provider.Name" title="Zaloguj używając konta @provider.DisplayName">
                                        <i class="fab fa-@provider.Name.ToLower()"></i>@provider.Name
                                    </button>
                                </div>
                            }
                        </div>
                    </form>
                }
            }
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}